<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"
xmlns:st2="urn:schemas-microsoft-com:office:smarttags"
xmlns:st1="urn:schemas-microsoft-com:office:cs:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<!-- saved from url=(0014)about:internet --><!-- MSIE Mark of the Web -->

<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=keywords content="MathPageGen">

<meta name=Generator content="MathPage 1.0.1">
<meta name=Originator content="Microsoft Word 11">



<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Abstract Math: More about the Symbolic Language</title>





<!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st2\:*{behavior:url(#ieooui) }st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Helvetica;
	panose-1:2 11 6 4 2 2 2 2 2 4;
	}
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	}
@font-face
	{font-family:"MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	}
@font-face
	{font-family:"MS Gothic";
	panose-1:2 11 6 9 7 2 5 8 2 4;
	}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	}
@font-face
	{font-family:Verdana;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	}
@font-face
	{font-family:"\@MS Gothic";
	panose-1:2 11 6 9 7 2 5 8 2 4;
	}
@font-face
	{font-family:"\@MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.3in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	}
h1
	{margin-right:0in;
	margin-bottom:1.2pt;
	margin-left:0in;
	text-indent:0in;
	font-size:20.0pt;
	font-family:Arial;
	color:teal;
	font-weight:bold;}
h2
	{margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-indent:0in;
	font-size:16.0pt;
	font-family:Arial;
	color:teal;
	font-weight:bold;}
h3
	{margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-indent:0in;
	line-height:14.0pt;
	font-size:13.0pt;
	font-family:Arial;
	color:teal;
	font-weight:bold;}
h4
	{margin-top:4.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-indent:0in;
	line-height:14.0pt;
	font-size:11.0pt;
	font-family:Arial;
	color:teal;
	font-weight:bold;}
h5
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.2in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	color:green;
	font-weight:bold;}
h6
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.2in;
	line-height:14.0pt;
	font-size:7.5pt;
	font-family:Arial;
	color:green;
	font-weight:bold;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.2in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:11.0pt;
	margin-bottom:.0001pt;
	text-indent:.2in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:20.0pt;
	margin-bottom:.0001pt;
	text-indent:.3in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.3in;
	line-height:normal;
	font-size:10.0pt;
	font-family:Arial;
	}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.3in;
	line-height:normal;
	font-size:10.0pt;
	font-family:Arial;
	}
span.MsoCommentReference
	{}
p.MsoListBullet, li.MsoListBullet, div.MsoListBullet
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.3in;
	margin-bottom:.0001pt;
	text-indent:0in;
	line-height:normal;
	font-size:10.0pt;
	font-family:Arial;
	}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	text-indent:.3in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	}
p.MsoDate, li.MsoDate, div.MsoDate
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.2in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	}
p.MsoBlockText, li.MsoBlockText, div.MsoBlockText
	{margin-top:0in;
	margin-right:1.0in;
	margin-bottom:6.0pt;
	margin-left:1.0in;
	text-indent:.3in;
	line-height:normal;
	font-size:10.0pt;
	font-family:Arial;
	}


strong
	{font-family:Arial;
	font-style:italic;
	}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.2in;
	line-height:14.0pt;
	background:navy;
	font-size:10.0pt;
	font-family:Tahoma;
	}
p
	{margin-top:3.0pt;
	margin-right:7.5pt;
	margin-bottom:7.5pt;
	margin-left:0in;
	text-indent:.2in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.2in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	}
tt
	{font-family:"Courier New";
	}
span.Char5CharChar
	{font-family:Arial;
	color:teal;
	font-weight:bold;}
span.CharChar5
	{font-family:Arial;
	color:teal;
	font-weight:bold;}
span.CharChar4
	{font-family:Arial;
	color:teal;
	font-weight:bold;}
span.CharChar3
	{font-family:Arial;
	color:teal;
	font-weight:bold;}
span.Char5Char
	{font-family:Arial;
	color:teal;
	font-weight:bold;}
span.Char4Char
	{font-family:Arial;
	color:teal;
	font-weight:bold;}
span.CharChar2
	{font-family:Arial;
	color:green;
	font-weight:bold;}
span.CharChar1
	{font-family:Arial;
	}
p.Secondhead, li.Secondhead, div.Secondhead
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:right;
	text-indent:.2in;
	border:none;
	padding:0in;
	font-size:18.0pt;
	font-family:Arial;
	color:teal;
	font-weight:bold;
	font-style:italic;
	}
span.Abmath
	{font-family:Arial;
	color:teal;
	font-weight:bold;
	text-decoration:none;
	text-decoration:none;
	}
span.amhead
	{font-family:Arial;
	color:teal;
	border:none windowtext 1.0pt;
	padding:0in;
	font-weight:bold;
	text-decoration:none;
	text-decoration:none;
	}
span.Chaptitle
	{font-family:Arial;
	color:teal;
	border:none windowtext 1.0pt;
	padding:0in;
	font-weight:bold;
	text-decoration:none;
	text-decoration:none;
	}
p.Tiny, li.Tiny, div.Tiny
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:0in;
	line-height:normal;
	font-size:8.0pt;
	font-family:Arial;
	}
p.Postdate, li.Postdate, div.Postdate
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:right;
	text-indent:.3in;
	line-height:14.0pt;
	font-size:8.0pt;
	font-family:Arial;
	color:teal;
	font-style:italic;
	}
p.MTDisplayEquation, li.MTDisplayEquation, div.MTDisplayEquation
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	text-indent:.3in;
	line-height:14.0pt;
	font-size:11.0pt;
	font-family:Helvetica;
	}
span.ChildrenChar
	{font-family:Arial;
	}
p.Children, li.Children, div.Children
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.05in;
	margin-bottom:.0001pt;
	text-indent:.05in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	}
p.Subchildren, li.Subchildren, div.Subchildren
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.2in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	}
span.PurpleProseChar
	{font-family:Arial;
	color:#990066;
	font-weight:bold;
	font-style:italic;
	}
p.PurpleProse, li.PurpleProse, div.PurpleProse
	{margin-top:0in;
	margin-right:12.95pt;
	margin-bottom:0in;
	margin-left:9.35pt;
	margin-bottom:.0001pt;
	text-align:center;
	text-indent:0in;
	line-height:14.0pt;
	border:none;
	padding:0in;
	font-size:11.0pt;
	font-family:Arial;
	color:#990066;
	font-weight:bold;
	font-style:italic;
	}
span.TodoChar
	{font-family:Helvetica;
	color:#FF9900;
	font-weight:bold;
	}
p.Todo, li.Todo, div.Todo
	{margin-top:0in;
	margin-right:9.0pt;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-indent:0in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Helvetica;
	color:#FF9900;
	font-weight:bold;
	}
span.LlistChar
	{font-family:Arial;
	}
p.Llist, li.Llist, div.Llist
	{margin-top:3.0pt;
	margin-right:9.35pt;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-indent:.3in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	}
p.Subllist, li.Subllist, div.Subllist
	{margin-top:3.0pt;
	margin-right:9.35pt;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	text-indent:23.4pt;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	}
p.purple, li.purple, div.purple
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:0in;
	line-height:14.0pt;
	font-size:11.0pt;
	font-family:Helvetica;
	color:#990066;
	font-weight:bold;
	}
span.purpleChar
	{font-family:Helvetica;
	color:#990066;
	font-weight:bold;
	}
p.Alist, li.Alist, div.Alist
	{margin-top:3.0pt;
	margin-right:9.35pt;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	text-indent:-.25in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	}
p.Small, li.Small, div.Small
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:0in;
	line-height:14.0pt;
	font-size:8.0pt;
	font-family:Arial;
	}
p.ToDo0, li.ToDo0, div.ToDo0
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.2in;
	line-height:14.0pt;
	font-size:11.0pt;
	font-family:Arial;
	color:#FF6600;
	font-weight:bold;
	}
p.amsecondheaed, li.amsecondheaed, div.amsecondheaed
	{margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-align:right;
	text-indent:0in;
	font-size:24.0pt;
	font-family:Arial;
	color:teal;
	font-weight:bold;
	font-style:italic;}
p.children0, li.children0, div.children0
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.05in;
	margin-bottom:.0001pt;
	text-indent:.05in;
	line-height:14.0pt;
	font-size:11.0pt;
	font-family:Helvetica;
	}
p.subchildren0, li.subchildren0, div.subchildren0
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.2in;
	line-height:14.0pt;
	font-size:11.0pt;
	font-family:Helvetica;
	}
p.ToDO1, li.ToDO1, div.ToDO1
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.3in;
	line-height:14.0pt;
	font-size:14.0pt;
	font-family:Helvetica;
	color:#C8A200;
	font-weight:bold;
	}
span.ToDOChar0
	{font-family:Helvetica;
	color:#C8A200;
	font-weight:bold;
	}
span.InsetHead
	{font-family:Arial;
	color:teal;
	font-weight:bold;
	}
span.Head4
	{font-family:Arial;
	color:teal;
	font-weight:bold;}
span.roman
	{font-family:Verdana;
	font-weight:normal;
	font-style:normal;}
span.Inset
	{font-family:Arial;
	color:windowtext;
	font-weight:bold;
	font-style:italic;
	}
p.purplecentered, li.purplecentered, div.purplecentered
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	text-indent:.3in;
	line-height:14.0pt;
	font-size:11.0pt;
	font-family:Helvetica;
	color:#990066;
	font-weight:bold;
	font-style:italic;}
p.mpph, li.mpph, div.mpph
	{margin-right:0in;
	margin-left:0in;
	text-indent:.3in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Helvetica;
	}
p.mpphspan, li.mpphspan, div.mpphspan
	{margin-right:0in;
	margin-left:0in;
	text-indent:.3in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Helvetica;
	}
p.mpentity, li.mpentity, div.mpentity
	{margin-right:0in;
	margin-left:0in;
	text-indent:.3in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Helvetica;
	}
p.Head, li.Head, div.Head
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.3in;
	font-size:24.0pt;
	font-family:Arial;
	color:#7F7F00;
	font-weight:bold;}
p.TOC, li.TOC, div.TOC
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:.3in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Helvetica;
	color:black;
	}
span.Purple0
	{font-family:Arial;
	color:#993366;
	font-weight:bold;
	}
span.InsetChar
	{font-family:Helvetica;
	color:teal;
	font-weight:bold;}
span.Char3Char
	{font-family:Arial;
	color:teal;
	font-weight:bold;}
span.Char2Char
	{font-family:Arial;
	color:teal;
	font-weight:bold;}
span.smallCharChar
	{font-family:Helvetica;
	}
p.smallChar, li.smallChar, div.smallChar
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:0in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Helvetica;
	}
span.Char1Char
	{font-family:Arial;
	color:green;
	font-weight:bold;}
span.CharChar
	{font-family:Arial;
	}
span.ChildrenCharChar
	{font-family:Arial;
	}
span.PurpleProseCharChar
	{font-family:Arial;
	color:#990066;
	font-weight:bold;
	font-style:italic;}
span.TodoCharChar
	{font-family:Helvetica;
	color:#FF9900;
	font-weight:bold;
	}
span.LlistCharChar1Char
	{font-family:Arial;
	}
p.LlistCharChar1, li.LlistCharChar1, div.LlistCharChar1
	{margin-top:0in;
	margin-right:9.0pt;
	margin-bottom:0in;
	margin-left:5.4pt;
	margin-bottom:.0001pt;
	text-indent:9.0pt;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Arial;
	}
p.small0, li.small0, div.small0
	{margin:0in;
	margin-bottom:.0001pt;
	text-indent:0in;
	line-height:14.0pt;
	font-size:10.0pt;
	font-family:Helvetica;
	}
span.LlistCharChar
	{font-family:Arial;
	}
span.TinyChar
	{font-family:Arial;
	}
p.Preface, li.Preface, div.Preface
	{margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-indent:0in;
	line-height:14.0pt;
	border:none;
	padding:0in;
	font-size:11.0pt;
	font-family:Arial;
	color:olive;
	font-weight:bold;
	}
span.SmallChar0
	{font-family:Arial;
	}
p.Theorem, li.Theorem, div.Theorem
	{margin-right:0in;
	margin-left:0in;
	text-indent:0in;
	line-height:normal;
	border:none;
	padding:0in;
	font-size:12.0pt;
	font-family:Helvetica;
	}
@page Section1
	{size:8.5in 11.0in;
	margin:63.0pt 1.0in 1.0in 1.0in;
	}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{}
@list l0:level1
	{text-indent:0in;}
@list l0:level2
	{text-indent:-.25in;}
@list l0:level3
	{text-indent:-.25in;}
@list l0:level4
	{text-indent:-.25in;}
@list l0:level5
	{text-indent:-.25in;}
@list l0:level6
	{text-indent:-.25in;}
@list l0:level7
	{text-indent:-.25in;}
@list l0:level8
	{text-indent:-.25in;}
@list l0:level9
	{text-indent:-.25in;}
@list l1
	{}
@list l1:level1
	{margin-left:0in;
	text-indent:.3in;
	font-family:Symbol;
	color:windowtext;}
@list l2
	{}
@list l2:level1
	{margin-left:.3in;
	text-indent:0in;
	font-family:Wingdings;
	color:windowtext;}
@list l2:level2
	{text-indent:-.25in;}
@list l2:level3
	{text-indent:-.25in;}
@list l2:level4
	{text-indent:-.25in;}
@list l2:level5
	{text-indent:-.25in;}
@list l2:level6
	{text-indent:-.25in;}
@list l2:level7
	{text-indent:-.25in;}
@list l2:level8
	{text-indent:-.25in;}
@list l2:level9
	{text-indent:-.25in;}
@list l3
	{}
@list l3:level1
	{margin-left:-.1in;
	text-indent:.2in;
	font-family:Symbol;
	color:windowtext;}
@list l3:level2
	{text-indent:-.25in;}
@list l3:level3
	{text-indent:-.25in;}
@list l3:level4
	{text-indent:-.25in;}
@list l3:level5
	{text-indent:-.25in;}
@list l3:level6
	{text-indent:-.25in;}
@list l3:level7
	{text-indent:-.25in;}
@list l3:level8
	{text-indent:-.25in;}
@list l3:level9
	{text-indent:-.25in;}
@list l4
	{}
@list l4:level1
	{text-indent:-.25in;
	font-family:Symbol;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

<!-- MP HEAD( -->
<style>
.MPPH { visibility:hidden; page-break-inside:avoid }
.MPPHSpan { text-indent:0 }
sub,sup { font-size:x-small }
#MPDpiSpan { position:absolute; top:1in; left:1in; width:100px; border:none; visibility:hidden }
.MPEntity { font-family:'Times New Roman',Times,serif }
</style>
<style media=screen>
.MPScreenEqn { position:absolute; visibility:visible; z-index:98 }
.MPPrintEqn { display:none }
.MPScreenPH { }
.MPPrintPH { display:none }
.MPPopup { position:absolute; visibility:hidden; z-index:99; top:0; left:0; text-indent:0; cursor:hand; 
border:solid blue 1px; padding:5px; background-color:#FFFFCC; 
filter:progid:DXImageTransform.Microsoft.DropShadow(color=#444444,offx=3,offy=3,positive=1) 
}
.MPPopupNoBg { position:absolute; visibility:hidden; z-index:99; top:0; left:0; text-indent:0; cursor:hand; 
border:solid blue 1px; padding:5px; 
filter:progid:DXImageTransform.Microsoft.DropShadow(color=#444444,offx=3,offy=3,positive=1) 
}
</style>
<style media=print>
.MPScreenEqn { display:none }
.MPPrintEqn { position:absolute; visibility:visible }
.MPScreenPH { display:none }
.MPPrintPH { }
.MPPopup { display:none }
.MPPopupNoBg { display:none }
</style>
<script language=javascript src='mathpage.js'></script>
<script language=javascript>
if (typeof DSMP == 'undefined') {
	alert('MathPage Javascript file missing; equations and symbols will not display.');
	var DSMP = new Object;
	MPBodyInit=MPSetEqnAttrs=MPSetChAttrs=MPEquation=MPInlineChar=MPDeleteCode=MPNNCalcTopLeft=MPHidePopup=MPShowPopup=MPNNSelectScreenEqn=MPWebEQApplet=MPTechexplorerObject=function(){};
	DSMP.gEmptySrc=DSMP.gPlaceholderHeight=DSMP.gPlaceholderWidth=DSMP.gPlaceholder2Height=DSMP.gNNPopupBgColor=DSMP.gPopupEqnSrc=DSMP.gPopupEqnPadding=DSMP.gNNLayerTop=DSMP.gNNLayerLeft=DSMP.gScreenEqnSrc=DSMP.gScreenEqnWidth=DSMP.gScreenEqnHeight=DSMP.gPrintEqnSrc=null;
}
DSMP.gPageVersion = '1.1';
DSMP.gMaxCharCompat = 1;
DSMP.gGenMathZoom = 1;
DSMP.gPopupEqnBgColorDefault = '#FFFFCC';
DSMP.gPopupEqnPaddingDefault = 5;
DSMP.gPlaceholderPadding = 4;
DSMP.gOldJSMessage = 'Warning: this MathPage document requires a newer JavaScript file and may not display correctly.';
DSMP.gCompatMessage = 'Warning: this MathPage document was generated for Windows IE5 or later only and may not display correctly.';
DSMP.gMinBrowserMessage = 'Warning: MathPage requires a version 4 or later browser.';
DSMP.gHidePopupMessage = 'Click on a MathZoom equation to dismiss it, or shift-Click to close all.';
DSMP.gShowPopupMessage = 'Click on an equation to show the enlarged MathZoom version.';
</script>
<!-- )MP HEAD -->
</head>

<body lang=EN-US link=blue vlink="#CC3300" >
<!-- MP BODY(-->
<span id=MPDpiSpan></span>
<script language=javascript>
MPBodyInit('MMSymLangMore_files')
</script>
<!-- )MP BODY -->


<div class=Section1>

<p class=MsoNormal><span class=Abmath><span style='font-size:11.0pt;font-weight:
normal'><script language="VBScript">
<!--

-->
</script></span></span><span class=Abmath><span style='font-size:11.0pt'><script  type="text/javascript">
<!--
google_ad_client = "pub-0839594169704668";
google_ad_width = 728;
google_ad_height = 90;
google_ad_format = "728x90_as";
google_ad_type = "text";
google_ad_channel ="";
//-->
</script></span></span><span class=Abmath><span style='font-size:11.0pt;
font-weight:normal'><script  type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></span></span><span class=Abmath><span style='font-size:11.0pt'>&nbsp;</span></span></p>

<div style='border:solid teal 2.25pt;padding:0in 4.0pt 1.0pt 4.0pt'>

<p class=Tiny style='border:none;padding:0in;
'><span class=amhead><span
style='font-size:28.0pt'>abstractmath.org</span></span><span
class=amhead><u><span style='font-size:28.0pt'></span></u></span></p>

<p class=Secondhead style='text-indent:0in;line-height:normal;border:none;
padding:0in'><span
style='color:purple'>help with abstract math</span></p>

<pre style='text-indent:0in;line-height:normal;border:none;padding:0in'><span class=Abmath><span
style='font-size:11.0pt'>Produced by </span></span><a
href="http://www.cwru.edu/artsci/math/wells/home.html"><span style='font-size:
11.0pt;text-decoration:none'>Charles Wells.</span></a><span
class=Abmath><span style='font-size:11.0pt'>  </span></span><span
class=MsoHyperlink><span style='font-size:11.0pt;text-decoration:none;
'><a href="MMIntro.htm"><span style='text-decoration:none;
'>Home</span></a>.<a name="_Toc105947357">   </a><a
href="MMTOC.htm"><span
style='text-decoration:none'>Website Contents    </span></a> <a
href="MMIndex.htm"><span
style='text-decoration:none'>Website</span></a> Index   </span></span></pre><pre
style='text-align:right;text-indent:0in;line-height:normal;border:none;
padding:0in'><a
href="../Documents%20and%20Settings/Charles%20Wells/Application%20Data/Microsoft/Word/MMLangMath.htm"><span
style='mso-bookmark:_Toc105947357'><span style='font-size:11.0pt;text-decoration:
none;text-underline:none'>Back to Languages Head</span></span></a><span
style='mso-bookmark:_Toc105947357'><strong><span style='mso-bidi-font-family:
"Courier New";font-weight:normal;font-style:normal'><o:p></o:p></span></strong></span></pre></div>

<p class=MsoNormal style='text-indent:0in;line-height:normal'><span style='color:teal'>Posted </span><span style='color:teal'>1
September 2007</span><span style='mso-bidi-font-size:10.0pt;
color:teal;mso-bidi-font-weight:bold'><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:0in;line-height:normal'><span
style='color:teal'>&nbsp;</span></p>

<h3><span class=Chaptitle><span style='font-size:24.0pt'>MORE ABOUT THE SYMBOLIC LANGUAGE</span></span></h3>

<p class=MsoToc1 ><span
class=MsoHyperlink><a href="#_Toc148514707">Overloaded
notation<span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;
text-decoration:none'>1</span><span
style='color:windowtext;display:none;
text-decoration:none'></span></a></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'></span></p>

<p class=MsoToc1 ><span
class=MsoHyperlink><a href="#_Toc148514708">Problems
with bound variables<span style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;
text-decoration:none'>3</span><span
style='color:windowtext;display:none;
text-decoration:none'></span></a></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'></span></p>

<p class=MsoToc1 ><span
class=MsoHyperlink><a href="#_Toc148514709">More
about substitution<span style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;
text-decoration:none'>3</span><span
style='color:windowtext;display:none;
text-decoration:none'></span></a></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'></span></p>

<p class=MsoToc1 ><span
class=MsoHyperlink><a href="#_Toc148514710"><span
lang=EN >Examples of symbolic expressions</span><span
style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;
text-decoration:none'>4</span><span
style='color:windowtext;display:none;
text-decoration:none'></span></a></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'></span></p>

<p class=MsoToc1 ><span
class=MsoHyperlink><a href="#_Toc148514711">Irregular
syntax<span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;
text-decoration:none'>5</span><span
style='color:windowtext;display:none;
text-decoration:none'></span></a></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'></span></p>

<p class=MsoToc1 ><span
class=MsoHyperlink><a href="#_Toc148514712">Dependent
variable notation<span style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;
text-decoration:none'>6</span><span
style='color:windowtext;display:none;
text-decoration:none'></span></a></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'></span></p>

<p class=MsoToc1 ><span
class=MsoHyperlink><a href="#_Toc148514713">Pronunciation<span
style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;
text-decoration:none'>6</span><span
style='color:windowtext;display:none;
text-decoration:none'></span></a></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'></span></p>

<p class=MsoToc1 ><span
class=MsoHyperlink><a href="#_Toc148514714">Structural
notation<span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;
text-decoration:none'>6</span><span
style='color:windowtext;display:none;
text-decoration:none'></span></a></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'></span></p>

<p class=MsoToc1 ><span
class=MsoHyperlink><a href="#_Toc148514715">Suppression
of parameters<span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;
text-decoration:none'>6</span><span
style='color:windowtext;display:none;
text-decoration:none'></span></a></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'></span></p>

<p class=MsoToc1 ><span
class=MsoHyperlink><a href="#_Toc148514716">Answers
to objections &amp; questions<span style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;
text-decoration:none'>7</span><span
style='color:windowtext;display:none;
text-decoration:none'></span></a></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'></span></p>

<h1><a
name=overloadednotation></a><a name="_Toc148514707"></a><a name="_Toc139182236">Overloaded
notation</a></h1>



<p class=MsoNormal>This phrase comes from computing science.<span
style='mso-spacerun:yes'>  </span>Mathematicians ought to be aware of the concept
it names.<span style='mso-spacerun:yes'>  </span></p>

<h4>Example</h4>

<p class=MsoNormal>For each set <i style='mso-bidi-font-style:normal'>S</i><span
style='mso-spacerun:yes'>  </span>the identity function</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>usually applies to a <span class=LlistCharChar><a
href="HB/hb.html#symbol"><span style='color:windowtext;text-decoration:none;
text-underline:none'>symbol</span></a></span> or a name for a <span
class=LlistCharChar><a href="HB/hb.html#function"><span style='color:windowtext;
text-decoration:none;text-underline:none'>function</span></a></span> that takes
on different meanings depending on which <span class=LlistCharChar><a
href="HB/hb.html#type"><span style='color:windowtext;text-decoration:none;
text-underline:none'>type</span></a></span> of element it is evaluated at. Such
a<span class=LlistCharChar> function is also called <a name=polymorphic>polymo</a></span><span
style='mso-bookmark:polymorphic'>rphic</span> </p>

<p class=MsoNormal>Example</p>

<p class=MsoNormal><span class=LlistCharChar>The identity function is a
polymorphic name; in the usual formalism there is a different identity function
on each set. <o:p></o:p></span></p>

<p class=MsoNormal>Example</p>

<p class=MsoNormal>A familiar example is the <span class=LlistCharChar><a
href="HB/hb.html#symbol"><span style='color:windowtext;text-decoration:none;
text-underline:none'>symbol</span></a></span> ×, which is overloaded in <span
class=LlistCharChar><a href="HB/hb.html#college%20mathematics"><span
style='color:windowtext;text-decoration:none;text-underline:none'>college mathematics</span></a></span>
courses. When a and b are numbers, a×b is their product. When A and B are
matrices, A×B is the matrix product. When v and w are <st1:NumConv6p0 sch="1"
val="3" w:st="on">3</st1:NumConv6p0>-<span class=LlistCharChar><a
href="HB/hb.html#vector"><span style='color:windowtext;text-decoration:none;
text-underline:none'>vectors</span></a></span>, v×w is their vector product. </p>

<p class=MsoNormal>Example</p>

<p class=MsoNormal><span class=LlistCharChar>Another example is the common
treatment of the image for arbitrary functions: Let F:S→T be a function. <o:p></o:p></span></p>

<p class=MsoNormal><span class=LlistCharChar>If x</span><span
class=LlistCharChar><span style='font-family:"MS Gothic";mso-bidi-font-family:
"MS Gothic";mso-bidi-font-weight:normal'><!-- MP SYPH( --><script id=mpch0001s1>
	MPSetChAttrs('ch0001','ch0',[[6,5,-1,-1,-3],[8,9,0,-2,-3],[11,9,-2,-2,-3],[],[],[],[27,20,-5,-7,-7]])
</script><![if !ie]><span id=mpnnch0001ph class=MPNNCode
	><img border=0 name=mpch0001ph src='&{DSMP.gEmptySrc};' height=1 width='&{DSMP.gPlaceholderWidth};'
></span><![endif]><script id=mpch0001s2>
	MPInlineChar(0)
</script><!-- )MP SYPH --></span></span><span
class=LlistCharChar>S, F(x) is the value of F applied to x. It is called the
image of x under F. <o:p></o:p></span></p><!-- MP SYRA( --><script id=mpch0001s1>
	MPSetChAttrs('ch0001','ch0',[[6,5,-1,-1,-3],[8,9,0,-2,-3],[11,9,-2,-2,-3],[],[],[],[27,20,-5,-7,-7]])
</script><!-- )MP SYRA --><!-- MP SY( --><![if !ie]><div id=mpnnch0001 class=MPNNCode
	><script>
		MPNNCalcTopLeft(document.mpch0001ph,'')
	</script><layer id=mpch0001 z-index=98 visibility='visible' top='&{DSMP.gNNLayerTop};' left='&{DSMP.gNNLayerLeft};'
		><img border=0 width='&{DSMP.gScreenEqnWidth};' height='&{DSMP.gScreenEqnHeight};'
			 src='&{DSMP.gPrintEqnSrc};' onload='MPNNSelectScreenEqn(this)'
	></layer></div><script id=mpch0001s3>
	MPDeleteCode('ch0001')
</script><![endif]><!-- )MP SY -->

<p class=MsoNormal><a name=imb></a><span class=LlistCharChar>If A is a subset
of S, then F(A)={F(x)&amp;mid;x</span><span class=LlistCharChar><span
style='font-family:"MS Gothic";mso-bidi-font-family:"MS Gothic";mso-bidi-font-weight:
normal'><!-- MP SYPH( --><script id=mpch0002s1>
	MPSetChAttrs('ch0002','ch0',[[6,5,-1,-1,-3],[8,9,0,-2,-3],[11,9,-2,-2,-3],[],[],[],[27,20,-5,-7,-7]])
</script><![if !ie]><span id=mpnnch0002ph class=MPNNCode
	><img border=0 name=mpch0002ph src='&{DSMP.gEmptySrc};' height=1 width='&{DSMP.gPlaceholderWidth};'
></span><![endif]><script id=mpch0002s2>
	MPInlineChar(0)
</script><!-- )MP SYPH --></span></span><span
class=LlistCharChar>A} (see <a href="HB/hb.html#setbuildernotation"><span
style='color:windowtext;text-decoration:none;text-underline:none'>setbuilder
notation</span></a>). It is called the image of A under F. <o:p></o:p></span></p><!-- MP SYRA( --><script id=mpch0002s1>
	MPSetChAttrs('ch0002','ch0',[[6,5,-1,-1,-3],[8,9,0,-2,-3],[11,9,-2,-2,-3],[],[],[],[27,20,-5,-7,-7]])
</script><!-- )MP SYRA --><!-- MP SY( --><![if !ie]><div id=mpnnch0002 class=MPNNCode
	><script>
		MPNNCalcTopLeft(document.mpch0002ph,'')
	</script><layer id=mpch0002 z-index=98 visibility='visible' top='&{DSMP.gNNLayerTop};' left='&{DSMP.gNNLayerLeft};'
		><img border=0 width='&{DSMP.gScreenEqnWidth};' height='&{DSMP.gScreenEqnHeight};'
			 src='&{DSMP.gPrintEqnSrc};' onload='MPNNSelectScreenEqn(this)'
	></layer></div><script id=mpch0002s3>
	MPDeleteCode('ch0002')
</script><![endif]><!-- )MP SY -->

<p class=MsoNormal><span class=LlistCharChar>The image of F is the set of all t
in T for which there is an x</span><span class=LlistCharChar><span
style='font-family:"MS Gothic";mso-bidi-font-family:"MS Gothic";mso-bidi-font-weight:
normal'><!-- MP SYPH( --><script id=mpch0003s1>
	MPSetChAttrs('ch0003','ch0',[[6,5,-1,-1,-3],[8,9,0,-2,-3],[11,9,-2,-2,-3],[],[],[],[27,20,-5,-7,-7]])
</script><![if !ie]><span id=mpnnch0003ph class=MPNNCode
	><img border=0 name=mpch0003ph src='&{DSMP.gEmptySrc};' height=1 width='&{DSMP.gPlaceholderWidth};'
></span><![endif]><script id=mpch0003s2>
	MPInlineChar(0)
</script><!-- )MP SYPH --></span></span><span
class=LlistCharChar>S such that F(x)=t, which is the image in the sense
of&nbsp;(<a href="HB/hb.html#imb"><span style='color:windowtext;text-decoration:
none;text-underline:none'>*</span></a></span>) of the <span
class=LlistCharChar><a href="HB/hb.html#domain"><span style='color:windowtext;
text-decoration:none;text-underline:none'>domain</span></a></span> of F. The
word &quot;<span class=LlistCharChar><a href="HB/hb.html#range"><span
style='color:windowtext;text-decoration:none;text-underline:none'>range</span></a></span>&quot;
is also used for this meaning. </p><!-- MP SYRA( --><script id=mpch0003s1>
	MPSetChAttrs('ch0003','ch0',[[6,5,-1,-1,-3],[8,9,0,-2,-3],[11,9,-2,-2,-3],[],[],[],[27,20,-5,-7,-7]])
</script><!-- )MP SYRA --><!-- MP SY( --><![if !ie]><div id=mpnnch0003 class=MPNNCode
	><script>
		MPNNCalcTopLeft(document.mpch0003ph,'')
	</script><layer id=mpch0003 z-index=98 visibility='visible' top='&{DSMP.gNNLayerTop};' left='&{DSMP.gNNLayerLeft};'
		><img border=0 width='&{DSMP.gScreenEqnWidth};' height='&{DSMP.gScreenEqnHeight};'
			 src='&{DSMP.gPrintEqnSrc};' onload='MPNNSelectScreenEqn(this)'
	></layer></div><script id=mpch0003s3>
	MPDeleteCode('ch0003')
</script><![endif]><!-- )MP SY -->

<p class=MsoNormal>Remark</p>

<p class=MsoNormal>The preceding example is in a way fake. One could simply
stipulate that every function F:S→T has values defined for every element of S
and (in the way illustrated above) <span class=LlistCharChar>for every subset
of S. However, the phrase &quot;the image of F&quot; would still overload the
word &quot;image&quot;. <o:p></o:p></span></p>

<p class=MsoNormal>Example</p>

<p class=MsoNormal><span class=LlistCharChar>A functor F from a category C to a
category D is defined on both objects and arrows of C. This, too is a fake
example, since the value of the functor at identity arrows determines its value
on objects. <o:p></o:p></span></p>

<p class=MsoNormal>Example</p>

<p class=MsoNormal><a name=vsex></a>A text on vector spaces will very likely
use + for addition of <span class=LlistCharChar><a href="HB/hb.html#vector"><span
style='color:windowtext;text-decoration:none;text-underline:none'>vectors</span></a></span>
in every vector space. Similarly, some texts on <span class=LlistCharChar><a
href="HB/hb.html#group"><span style='color:windowtext;text-decoration:none;
text-underline:none'>group</span></a></span> theory will use e or <st1:NumConv6p0
sch="1" val="1" w:st="on">1</st1:NumConv6p0> for the identity element for any
group and juxtaposition for the <span class=LlistCharChar><a
href="HB/hb.html#binaryoperation"><span style='color:windowtext;text-decoration:
none;text-underline:none'>binary operation</span></a> of any group. <o:p></o:p></span></p>

<p class=MsoNormal><span class=LlistCharChar>When students start taking
\ln{college mathematics}, the frequent occurrence of ad-hoc polymorphism means
that they have to \textit{read the surrounding text} to understand what a
\lni{symbolic expression} means: the expression is no longer self-sufficient.
When I first came across this aspect of mathematics in a matrix theory course
at <st2:place w:st="on"><st2:PlaceName w:st="on">Texas</st2:PlaceName> <st2:PlaceName
 w:st="on">Southmost</st2:PlaceName> <st2:PlaceType w:st="on">College</st2:PlaceType></st2:place>,
I felt that I had been ejected from paradise.<o:p></o:p></span></p>

<table class=MsoNormalTable border=1 cellpadding=0 align=right width="30%"
 style='width:30.0%;mso-cellspacing:1.5pt;background:#FFFFD0;border:outset 1.5pt;
 mso-table-lspace:2.25pt;margin-left:.2pt;mso-table-rspace:2.25pt;margin-right:
 .2pt;mso-table-anchor-vertical:paragraph;mso-table-anchor-horizontal:column;
 mso-table-left:right;mso-table-top:middle;mso-padding-alt:1.5pt 1.5pt 1.5pt 1.5pt'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes'>
  <td style='padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:2.25pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  column;mso-element-left:right;mso-element-top:middle;mso-height-rule:exactly'><o:p>&nbsp;</o:p></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>Remark</p>

<p class=MsoNormal>Example&nbsp;<span class=LlistCharChar><a
href="HB/hb.html#vsex"><span style='color:windowtext;text-decoration:none;
text-underline:none'>*</span></a></span> illustrates the common case of using
the same <span class=LlistCharChar><a href="HB/hb.html#symbol"><span
style='color:windowtext;text-decoration:none;text-underline:none'>symbol</span></a></span>
in every model for a particular operation in an axiomatically defined <span
class=LlistCharChar><a href="HB/hb.html#mathematical%20structure"><span
style='color:windowtext;text-decoration:none;text-underline:none'>mathematical
structure</span></a></span>. </p>

<p class=MsoNormal>Remark</p>

<p class=MsoNormal>The operation × does not require the same <span
class=LlistCharChar><a href="HB/hb.html#algorithm"><span style='color:windowtext;
text-decoration:none;text-underline:none'>algorithm</span></a></span> on
matrices as it does on <st1:NumConv6p0 sch="1" val="3" w:st="on">3</st1:NumConv6p0>-<span
class=LlistCharChar><a href="HB/hb.html#vector"><span style='color:windowtext;
text-decoration:none;text-underline:none'>vectors</span></a></span>. This is
the sort of phenomenon computer scientists call <a name="ad-hoc_polymorphism">ad-hoc
polymorphism</a>. It is contrasted with <a name="parametric_polymorphism">parametric
polymorphism</a>, an example of which is the <span class=LlistCharChar><a
href="HB/hb.html#algorithm"><span style='color:windowtext;text-decoration:none;
text-underline:none'>algorithm</span></a></span> &quot;swap the two entries in
an ordered pair&quot;, which applies to ordered pairs of any type of element.
(The parameter that gives rise to the name &quot;parametric&quot; is the type
of element.) See <span class=LlistCharChar><a href="HB/hb.html#algorithm"><span
style='color:windowtext;text-decoration:none;text-underline:none'>algorithm</span></a></span>.
The <span class=LlistCharChar><a href="HB/hb.html#identity%20function"><span
style='color:windowtext;text-decoration:none;text-underline:none'>identity
function</span></a> provides a trivial example of parametric polymorphism. <o:p></o:p></span></p>

<p class=MsoNormal><span class=LlistCharChar>Many mathematicians think and
speak informally of a parametrically polymorphic function as one single function.
(&quot;... the identity function is injective&quot;). <o:p></o:p></span></p>

<p class=MsoNormal>Remark</p>

<p class=MsoNormal>The concept &quot;overloaded&quot; is natural in computing
science because operations on different data types are typically implemented
differently. For example, addition of integers is implemented differently from
addition of floating point numbers in most computer languages. The concept is
less natural in mathematics, where you could define the operation on the
disjoint union of all the sets under consideration (for ×, the set might be R
plus the set of all <st1:NumConv6p0 sch="1" val="3" w:st="on">3</st1:NumConv6p0>-dimensional
real <span class=LlistCharChar><a href="HB/hb.html#vector"><span
style='color:windowtext;text-decoration:none;text-underline:none'>vectors</span></a></span>
plus the set of all n×n real matrices for each n). Even there, however, the
implementation algorithm differs for some of the subsets. (See <span
class=LlistCharChar><a href="HB/hb.html#cases"><span style='color:windowtext;
text-decoration:none;text-underline:none'>cases</span></a>.) <o:p></o:p></span></p>

<p class=MsoNormal><span class=LlistCharChar>See also <a
href="HB/hb.html#superscript"><span style='color:windowtext;text-decoration:
none;text-underline:none'>superscript</span></a>. <o:p></o:p></span></p>

<p class=MsoNormal><span class=LlistCharChar>Citations: KulMir<st1:NumConv6p0
val="8636" sch="1" w:st="on">8636</st1:NumConv6p0> <o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h1><o:p>&nbsp;</o:p></h1>

<h1><a name="_Toc148514708">Problems with bound variables</a></h1>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Students find it difficult to learn how to use bound
variables correctly. </p>

<p class=MsoNormal>They may allow <span style='mso-bidi-font-family:Arial'><a
href="MMDysfunctional.htm#variableclash">variable clash<span style='mso-bidi-font-family:
"Times New Roman"'>.</span></a></span> </p>

<p class=MsoNormal>They may not understand that the choice of bound variable
does not matter (except for variable clash); thus ∫<st1:NumConv6p6 sch="4"
val="2 5" w:st="on">2 5</st1:NumConv6p6> x<st1:NumConv6p0 sch="1" val="2"
w:st="on">2</st1:NumConv6p0> <span style='font-family:"MS Mincho";mso-bidi-font-family:
"MS Mincho"'><!-- MP SYPH( --><script id=mpch0004s1>
	MPSetChAttrs('ch0004','ch',[[5,1,0,0,0],[7,1,0,0,0],[8,1,0,0,0],[],[],[],[21,1,0,0,0]])
</script><![if !ie]><span id=mpnnch0004ph class=MPNNCode
	><img border=0 name=mpch0004ph src='&{DSMP.gEmptySrc};' height=1 width='&{DSMP.gPlaceholderWidth};'
></span><![endif]><script id=mpch0004s2>
	MPInlineChar(0)
</script><!-- )MP SYPH --></span>dx
and ∫<st1:NumConv6p6 sch="4" val="2 5" w:st="on">2 5</st1:NumConv6p6> t<st1:NumConv6p0
sch="1" val="2" w:st="on">2</st1:NumConv6p0> <span style='font-family:"MS Mincho";
mso-bidi-font-family:"MS Mincho"'><!-- MP SYPH( --><script id=mpch0005s1>
	MPSetChAttrs('ch0005','ch',[[5,1,0,0,0],[7,1,0,0,0],[8,1,0,0,0],[],[],[],[21,1,0,0,0]])
</script><![if !ie]><span id=mpnnch0005ph class=MPNNCode
	><img border=0 name=mpch0005ph src='&{DSMP.gEmptySrc};' height=1 width='&{DSMP.gPlaceholderWidth};'
></span><![endif]><script id=mpch0005s2>
	MPInlineChar(0)
</script><!-- )MP SYPH --></span>dt
are the same <i>by their form</i>. </p><!-- MP SYRA( --><script id=mpch0005s1>
	MPSetChAttrs('ch0005','ch',[[5,1,0,0,0],[7,1,0,0,0],[8,1,0,0,0],[],[],[],[21,1,0,0,0]])
</script><!-- )MP SYRA --><!-- MP SY( --><![if !ie]><div id=mpnnch0005 class=MPNNCode
	><script>
		MPNNCalcTopLeft(document.mpch0005ph,'')
	</script><layer id=mpch0005 z-index=98 visibility='visible' top='&{DSMP.gNNLayerTop};' left='&{DSMP.gNNLayerLeft};'
		><img border=0 width='&{DSMP.gScreenEqnWidth};' height='&{DSMP.gScreenEqnHeight};'
			 src='&{DSMP.gPrintEqnSrc};' onload='MPNNSelectScreenEqn(this)'
	></layer></div><script id=mpch0005s3>
	MPDeleteCode('ch0005')
</script><![endif]><!-- )MP SY --><!-- MP SYRA( --><script id=mpch0004s1>
	MPSetChAttrs('ch0004','ch',[[5,1,0,0,0],[7,1,0,0,0],[8,1,0,0,0],[],[],[],[21,1,0,0,0]])
</script><!-- )MP SYRA --><!-- MP SY( --><![if !ie]><div id=mpnnch0004 class=MPNNCode
	><script>
		MPNNCalcTopLeft(document.mpch0004ph,'')
	</script><layer id=mpch0004 z-index=98 visibility='visible' top='&{DSMP.gNNLayerTop};' left='&{DSMP.gNNLayerLeft};'
		><img border=0 width='&{DSMP.gScreenEqnWidth};' height='&{DSMP.gScreenEqnHeight};'
			 src='&{DSMP.gPrintEqnSrc};' onload='MPNNSelectScreenEqn(this)'
	></layer></div><script id=mpch0004s3>
	MPDeleteCode('ch0004')
</script><![endif]><!-- )MP SY -->

<p class=MsoNormal>They may move a bound variable out of its binder, for
example changing ∑i=<st1:NumConv6p0 sch="1" val="1" w:st="on">1</st1:NumConv6p0>
n i<st1:NumConv6p0 sch="1" val="2" w:st="on">2</st1:NumConv6p0> to i ∑i=<st1:NumConv6p0
sch="1" val="1" w:st="on">1</st1:NumConv6p0> ni (which makes it easy to
&quot;solve&quot;!). </p>

<p class=MsoNormal>They may <a href="MMVarSub.htm#substitution">substitute</a>
for it, although in my teaching experience that is uncommon. </p>

<h4>Terminology</h4>

<p class=MsoNormal>Bound variables are also called <a name="dummy_variable"><b>dummy
v</b></a><a name=dummyvariable></a><span style='mso-bookmark:dummy_variable'><b>ariables</b></span>.
</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The variable in setbuilder notation, such as the x in Equation&nbsp;(<a
href="dma.html#unitinv">9</a>), is <b>bound</b>, in the sense that you cannot
substitute anything for it. The &quot;dummy variable&quot; x in an integral
such as ∫a b f(x)<span style='font-family:"MS Mincho";mso-bidi-font-family:
"MS Mincho"'><!-- MP SYPH( --><script id=mpch0006s1>
	MPSetChAttrs('ch0006','ch',[[5,1,0,0,0],[7,1,0,0,0],[8,1,0,0,0],[],[],[],[21,1,0,0,0]])
</script><![if !ie]><span id=mpnnch0006ph class=MPNNCode
	><img border=0 name=mpch0006ph src='&{DSMP.gEmptySrc};' height=1 width='&{DSMP.gPlaceholderWidth};'
></span><![endif]><script id=mpch0006s2>
	MPInlineChar(0)
</script><!-- )MP SYPH --></span>dx
is bound in the same sense. On the other hand, the a and b in Equation&nbsp;(<a
href="dma.html#closedint">11</a>) are <a name="free_variables"><b>free
variables</b></a>: by substituting real numbers for a and b you get specific <a
href="dma.html#set">set</a>s such as [<st1:NumConv6p0 sch="1" val="0" w:st="on">0</st1:NumConv6p0>…<st1:NumConv6p0
sch="1" val="2" w:st="on">2</st1:NumConv6p0>] or [-<st1:NumConv6p0 sch="1"
val="5" w:st="on">5</st1:NumConv6p0>…<st1:NumConv6p0 sch="1" val="3" w:st="on">3</st1:NumConv6p0>].
Free variables which occur in a definition in this way are also called <a
name=parameters><b>parameters</b></a> of the definition. </p><!-- MP SYRA( --><script id=mpch0006s1>
	MPSetChAttrs('ch0006','ch',[[5,1,0,0,0],[7,1,0,0,0],[8,1,0,0,0],[],[],[],[21,1,0,0,0]])
</script><!-- )MP SYRA --><!-- MP SY( --><![if !ie]><div id=mpnnch0006 class=MPNNCode
	><script>
		MPNNCalcTopLeft(document.mpch0006ph,'')
	</script><layer id=mpch0006 z-index=98 visibility='visible' top='&{DSMP.gNNLayerTop};' left='&{DSMP.gNNLayerLeft};'
		><img border=0 width='&{DSMP.gScreenEqnWidth};' height='&{DSMP.gScreenEqnHeight};'
			 src='&{DSMP.gPrintEqnSrc};' onload='MPNNSelectScreenEqn(this)'
	></layer></div><script id=mpch0006s3>
	MPDeleteCode('ch0006')
</script><![endif]><!-- )MP SY -->

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h1><a name="tth_sEc4"></a><a name="_Toc148514709"><span style='mso-bookmark:
tth_sEc4'>More about substitution</span></a><span style='mso-bookmark:tth_sEc4'></span></h1>

<span style='mso-bookmark:tth_sEc4'></span>

<h3>Naming expressions<span style='font-size:18.0pt'><o:p></o:p></span></h3>

<p class=MsoNormal>We will name <a href="XML%20version/MMProofs.html#[#[">[</a>predicate]predicates
with letters in much the same way that we use letters to denote numbers in
algebra. It is allowed, <i>but not required</i>, to show the variable(s) in parentheses.
For example, we can say: let P(x) denote the <a
href="XML%20version/MMProofs.html#predicate#predicate">predicate</a> &quot; <st1:NumConv6p0
sch="1" val="25" w:st="on">25</st1:NumConv6p0>≤x&quot;. Then P(<st1:NumConv6p0
sch="1" val="42" w:st="on">42</st1:NumConv6p0>) would denote the <a
href="XML%20version/MMProofs.html#proposition#proposition">proposition</a>
&quot; <st1:NumConv6p0 sch="1" val="25" w:st="on">25</st1:NumConv6p0>≤<st1:NumConv6p0
sch="1" val="42" w:st="on">42</st1:NumConv6p0>&quot;, which is true; but P(-<st1:NumConv6p0
sch="1" val="2" w:st="on">2</st1:NumConv6p0>) would be false. P(<st1:NumConv6p0
sch="1" val="42" w:st="on">42</st1:NumConv6p0>) is obtained from P(x) by <a
href="XML%20version/MMProofs.html#substitution#substitution">substitution</a>. </p>

<p class=MsoNormal>We can also say, &quot;Let P denote the predicate <st1:NumConv6p0
sch="1" val="25" w:st="on">25</st1:NumConv6p0>≤x&quot; without the x being
exhibited. This is useful when we want to refer to an arbitrary predicate
without specifying how many variables it has. </p>

<p class=MsoNormal>Predicates can have more than one variable. For example, let
Q(x,y) be &quot; x≤y&quot;. Then Q(<st1:NumConv6p6 sch="4" val="25,42" w:st="on">25,42</st1:NumConv6p6>)
denotes the proposition obtained by substituting <st1:NumConv6p0 sch="1"
val="25" w:st="on">25</st1:NumConv6p0> for x and <st1:NumConv6p0 sch="1"
val="42" w:st="on">42</st1:NumConv6p0> for y. Q(<st1:NumConv6p6 sch="4"
val="25,42" w:st="on">25,42</st1:NumConv6p6>) is true; on the other hand, Q(<st1:NumConv6p0
sch="1" val="25" w:st="on">25</st1:NumConv6p0>,-<st1:NumConv6p0 sch="1" val="2"
w:st="on">2</st1:NumConv6p0>) is false, and Q(<st1:NumConv6p0 sch="1" val="25"
w:st="on">25</st1:NumConv6p0>,y) is a <a
href="XML%20version/MMProofs.html#predicate#predicate">predicate</a>, neither
true nor false. </p>

<h3>Worked Exercise<span style='font-size:13.5pt'><o:p></o:p></span></h3>

<p class=MsoNormal>Let m and n be integer variables. Let P(n) denote the
predicate n&lt;<st1:NumConv6p0 sch="1" val="42" w:st="on">42</st1:NumConv6p0>
and Q(m,n) the predicate n&amp;verbar; (m+n). Which of these predicates is true
when <st1:NumConv6p0 sch="1" val="42" w:st="on">42</st1:NumConv6p0> is
substituted for m and <st1:NumConv6p0 sch="1" val="4" w:st="on">4</st1:NumConv6p0>
is substituted for n? <b>Answer: </b>P(<st1:NumConv6p0 sch="1" val="4" w:st="on">4</st1:NumConv6p0>)
is <st1:NumConv6p0 sch="1" val="4" w:st="on">4</st1:NumConv6p0>&lt;<st1:NumConv6p0
sch="1" val="42" w:st="on">42</st1:NumConv6p0>, which is true, and Q(<st1:NumConv6p6
sch="4" val="42,4" w:st="on">42,4</st1:NumConv6p6>) is <st1:NumConv6p0 sch="1"
val="4" w:st="on">4</st1:NumConv6p0>&amp;verbar;<st1:NumConv6p0 sch="1" val="46"
w:st="on">46</st1:NumConv6p0>, which is false. </p>

<h3>Exercise<span style='font-size:13.5pt'><o:p></o:p></span></h3>

<p class=MsoNormal>If Q(x) is the predicate x<st1:NumConv6p0 sch="1" val="2"
w:st="on">2</st1:NumConv6p0> &lt;<st1:NumConv6p0 sch="1" val="4" w:st="on">4</st1:NumConv6p0>,
what are Q(-<st1:NumConv6p0 sch="1" val="1" w:st="on">1</st1:NumConv6p0>) and
Q(x-<st1:NumConv6p0 sch="1" val="1" w:st="on">1</st1:NumConv6p0>)? <b>Answer: </b>Q(-<st1:NumConv6p0
sch="1" val="1" w:st="on">1</st1:NumConv6p0>) is <st1:NumConv6p0 sch="1" val="1"
w:st="on">1</st1:NumConv6p0>&lt;<st1:NumConv6p0 sch="1" val="4" w:st="on">4</st1:NumConv6p0>
and Q(x-<st1:NumConv6p0 sch="1" val="1" w:st="on">1</st1:NumConv6p0>) is (x-<st1:NumConv6p0
sch="1" val="1" w:st="on">1</st1:NumConv6p0> )<st1:NumConv6p0 sch="1" val="2"
w:st="on">2</st1:NumConv6p0> &lt;<st1:NumConv6p0 sch="1" val="4" w:st="on">4</st1:NumConv6p0>.
</p>

<h3>Exercise<span style='font-size:13.5pt'><o:p></o:p></span></h3>

<p class=MsoNormal><a name=ppred></a>Let P(x,y,z) be the <a
href="XML%20version/MMProofs.html#predicate#predicate">predicate</a> xy&lt;
x+z+<st1:NumConv6p0 sch="1" val="1" w:st="on">1</st1:NumConv6p0>. Write out
each of these <a href="XML%20version/MMProofs.html#predicate#predicate">predicate</a>s.
</p>

<h3>Exercise<span style='font-size:13.5pt'><o:p></o:p></span></h3>

<p class=MsoNormal>P(<st1:NumConv6p0 sch="1" val="1" w:st="on">1</st1:NumConv6p0>,<st1:NumConv6p0
sch="1" val="2" w:st="on">2</st1:NumConv6p0>,<st1:NumConv6p0 sch="1" val="3"
w:st="on">3</st1:NumConv6p0>). </p>

<h3>Exercise<span style='font-size:13.5pt'><o:p></o:p></span></h3>

<p class=MsoNormal>P(<st1:NumConv6p0 sch="1" val="1" w:st="on">1</st1:NumConv6p0>,<st1:NumConv6p0
sch="1" val="3" w:st="on">3</st1:NumConv6p0>,<st1:NumConv6p0 sch="1" val="2"
w:st="on">2</st1:NumConv6p0>). </p>

<h3>Exercise<span style='font-size:13.5pt'><o:p></o:p></span></h3>

<p class=MsoNormal>P(x,x,y) </p>

<h3>Exercise<span style='font-size:13.5pt'><o:p></o:p></span></h3>

<p class=MsoNormal>P(x,x+y,y+z).</p>

<p class=MsoNormal><b>Answer: </b>a. <st1:NumConv6p0 sch="1" val="2" w:st="on">2</st1:NumConv6p0>&lt;<st1:NumConv6p0
sch="1" val="5" w:st="on">5</st1:NumConv6p0>. b. <st1:NumConv6p0 sch="1" val="3"
w:st="on">3</st1:NumConv6p0>&lt;<st1:NumConv6p0 sch="1" val="4" w:st="on">4</st1:NumConv6p0>.
c. x<st1:NumConv6p0 sch="1" val="2" w:st="on">2</st1:NumConv6p0> &lt;x+y+<st1:NumConv6p0
sch="1" val="1" w:st="on">1</st1:NumConv6p0>. d. x(x+y)&lt;x+y+z+<st1:NumConv6p0
sch="1" val="1" w:st="on">1</st1:NumConv6p0>. </p>

<h3>Exercise<span style='font-size:13.5pt'><o:p></o:p></span></h3>

<p class=MsoNormal>Let P be the predicate of Exercise&nbsp;<a
href="XML%20version/MMProofs.html#ppred#ppred">4</a>. Write out P(x,x,x) and
P(x,x-<st1:NumConv6p0 sch="1" val="1" w:st="on">1</st1:NumConv6p0>,x+<st1:NumConv6p0
sch="1" val="1" w:st="on">1</st1:NumConv6p0>) and for each predicate give a
value of x for which it is true and another value for which it is false. </p>

<p class=MsoNormal>You may have seen notation such as &quot; f(x)&quot; to
denote a function. Thus if f(x) is the function whose <a
href="XML%20version/MMProofs.html#[#[">[</a>value (of a function)]value at x is
<st1:NumConv6p0 sch="1" val="2" w:st="on">2</st1:NumConv6p0>x+<st1:NumConv6p0
sch="1" val="5" w:st="on">5</st1:NumConv6p0>, then f(<st1:NumConv6p0 sch="1"
val="3" w:st="on">3</st1:NumConv6p0>)=<st1:NumConv6p0 sch="1" val="11" w:st="on">11</st1:NumConv6p0>.
We will consider functions formally in Chapter&nbsp;. Here we only want to call
your attention to a difference between that notation and the notation for <a
href="XML%20version/MMProofs.html#predicate#predicate">predicate</a>s: If f(x)=<st1:NumConv6p0
sch="1" val="2" w:st="on">2</st1:NumConv6p0>x+<st1:NumConv6p0 sch="1" val="5"
w:st="on">5</st1:NumConv6p0>, then &quot; f(x)&quot; is an <em><span
style='font-family:Arial;mso-bidi-font-family:"Times New Roman"'>expression</span></em>.
It is the name of something. On the other hand, if P(x) denotes the <a
href="XML%20version/MMProofs.html#predicate#predicate">predicate</a> &quot; <st1:NumConv6p0
sch="1" val="25" w:st="on">25</st1:NumConv6p0>≤x&quot;, then P(x) is a <em><span
style='font-family:Arial;mso-bidi-font-family:"Times New Roman"'>statement</span></em>
- a complete sentence with a subject and a verb. It makes sense to say,
&quot;If a=<st1:NumConv6p0 sch="1" val="42" w:st="on">42</st1:NumConv6p0>, then
P(a)&quot;, for that is equivalent to saying, &quot;If a=<st1:NumConv6p0 sch="1"
val="42" w:st="on">42</st1:NumConv6p0>, then <st1:NumConv6p0 sch="1" val="25"
w:st="on">25</st1:NumConv6p0>≤a&quot;. It does not make sense to say, &quot;If
a=<st1:NumConv6p0 sch="1" val="42" w:st="on">42</st1:NumConv6p0>, then
f(a)&quot;, which would be &quot;If a=<st1:NumConv6p0 sch="1" val="42" w:st="on">42</st1:NumConv6p0>,
then <st1:NumConv6p0 sch="1" val="2" w:st="on">2</st1:NumConv6p0>a+<st1:NumConv6p0
sch="1" val="5" w:st="on">5</st1:NumConv6p0>&quot;. Of course, it <i>is</i>
meaningful to say &quot;If a=<st1:NumConv6p0 sch="1" val="42" w:st="on">42</st1:NumConv6p0>,
then f(a)=<st1:NumConv6p0 sch="1" val="89" w:st="on">89</st1:NumConv6p0>&quot;.
</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span class=Chaptitle><span lang=EN style='font-size:9.0pt;
color:black;mso-ansi-language:EN;font-weight:normal'><o:p>&nbsp;</o:p></span></span></p>

<h2><o:p>&nbsp;</o:p></h2>

<h1><span lang=EN style='mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></h1>

<h1><a name="_Toc148514710"><span lang=EN style='mso-ansi-language:EN'>Exam